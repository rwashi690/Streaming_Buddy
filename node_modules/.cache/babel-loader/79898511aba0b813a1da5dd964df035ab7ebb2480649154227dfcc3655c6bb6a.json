{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nconst Home = () => {\n  _s();\n  //const[initialData, setInitialData] =useState([{}])\n  const [currentTopTen, setCurrentTopTen] = useState([{}]);\n  const [currentTrendingTen, setCurrentTrendingTen] = useState([{}]);\n  const [pastTopTen, setPastTopTen] = useState([{}]);\n  const [pastTrendingTen, setPastTrendingTen] = useState([{}]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(\"/getAllPastMovies\").then(res => res.json()).then(pastMovieData => {\n      setIsLoaded(true);\n      setPastTopTen(pastMovieData);\n      console.log(pastMovieData);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n    fetch(\"/getAllPastTrendingMovies\").then(res => res.json()).then(pastTrendingData => {\n      setIsLoaded(true);\n      setPastTopTen(pastTrendingData);\n      console.log(pastTrendingData);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []\n  //     fetch('/getAllPastMovies').then(\n  //         response => response.json()\n  //     ).then(pastMovieData =>console.log(pastMovieData))\n\n  //     fetch('/getAllPastTrendingMovies').then(\n  //         response => response.json()\n  //     ).then(pastTrendingData =>console.log(pastTrendingData))\n\n  //     fetch('/topTenTrendingMoviesNow').then(\n  //         response => response.json()\n  //     ).then(currentTrendingData =>console.log(currentTrendingData))\n\n  //     fetch('/topTenMoviesNow').then(\n  //         response => response.json()\n  //     ).then(currentMovieData =>console.log(currentMovieData))\n  // }\n  );\n};\n_s(Home, \"JLyhs6X0E+EDmIBhCHdCkNleH6k=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","Home","_s","currentTopTen","setCurrentTopTen","currentTrendingTen","setCurrentTrendingTen","pastTopTen","setPastTopTen","pastTrendingTen","setPastTrendingTen","isLoaded","setIsLoaded","error","setError","fetch","then","res","json","pastMovieData","console","log","pastTrendingData","_c","$RefreshReg$"],"sources":["/Users/r/Fall1_MSCS/Applications of Software Architecture for Big Data/Streaming_Buddy/src/components/homepage.js"],"sourcesContent":["import React, { useState, useEffect }  from 'react';\nimport axios from \"axios\";\nconst Home = () => {\n    //const[initialData, setInitialData] =useState([{}])\n    const[currentTopTen, setCurrentTopTen] = useState([{}])\n    const[currentTrendingTen, setCurrentTrendingTen] = useState([{}])\n    const[pastTopTen, setPastTopTen] = useState([{}])\n    const[pastTrendingTen, setPastTrendingTen] = useState([{}])\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect (() => {\n        fetch(\"/getAllPastMovies\")\n            .then(res => res.json())\n            .then(\n                (pastMovieData) => {\n                    setIsLoaded(true);\n                    setPastTopTen(pastMovieData);\n                    console.log(pastMovieData)\n                },\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                }\n            )\n        fetch(\"/getAllPastTrendingMovies\")\n            .then(res => res.json())\n            .then(\n                (pastTrendingData) => {\n                    setIsLoaded(true);\n                    setPastTopTen(pastTrendingData);\n                    console.log(pastTrendingData)\n                },\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                }\n            )\n      }, []\n    //     fetch('/getAllPastMovies').then(\n    //         response => response.json()\n    //     ).then(pastMovieData =>console.log(pastMovieData))\n\n    //     fetch('/getAllPastTrendingMovies').then(\n    //         response => response.json()\n    //     ).then(pastTrendingData =>console.log(pastTrendingData))\n\n    //     fetch('/topTenTrendingMoviesNow').then(\n    //         response => response.json()\n    //     ).then(currentTrendingData =>console.log(currentTrendingData))\n\n    //     fetch('/topTenMoviesNow').then(\n    //         response => response.json()\n    //     ).then(currentMovieData =>console.log(currentMovieData))\n    // }\n    )\n\n    }\n\n\n    \nexport default Home;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAS,OAAO;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf;EACA,MAAK,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACvD,MAAK,CAACO,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjE,MAAK,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjD,MAAK,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAE,MAAM;IACbgB,KAAK,CAAC,mBAAmB,CAAC,CACrBC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CACAG,aAAa,IAAK;MACfP,WAAW,CAAC,IAAI,CAAC;MACjBJ,aAAa,CAACW,aAAa,CAAC;MAC5BC,OAAO,CAACC,GAAG,CAACF,aAAa,CAAC;IAC9B,CAAC,EACAN,KAAK,IAAK;MACPD,WAAW,CAAC,IAAI,CAAC;MACjBE,QAAQ,CAACD,KAAK,CAAC;IACnB,CACJ,CAAC;IACLE,KAAK,CAAC,2BAA2B,CAAC,CAC7BC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CACAM,gBAAgB,IAAK;MAClBV,WAAW,CAAC,IAAI,CAAC;MACjBJ,aAAa,CAACc,gBAAgB,CAAC;MAC/BF,OAAO,CAACC,GAAG,CAACC,gBAAgB,CAAC;IACjC,CAAC,EACAT,KAAK,IAAK;MACPD,WAAW,CAAC,IAAI,CAAC;MACjBE,QAAQ,CAACD,KAAK,CAAC;IACnB,CACJ,CAAC;EACP,CAAC,EAAE;EACL;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA,CAAC;AAED,CAAC;AAAAX,EAAA,CAvDCD,IAAI;AAAAsB,EAAA,GAAJtB,IAAI;AA2DV,eAAeA,IAAI;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}